swagger: '2.0'

info:
  description: This is a microservice documentation for the Media challenge.
  version: v1
  title: User REST API
  termsOfService: Terms of service
  contact:
    name: Gustavo Teixeira
    url: 'https://www.compasso.com.br'
    email: gustavoteixeira@compasso.com.br
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'

host: 'localhost:8080'
basePath: /
tags:
  - name: user-controller
    description: User Controller

paths:

  /users:

    get:
      tags:
        - user-controller
      summary: Returns a user or more by providing a name or partial name of the user
      operationId: getUserByNameUsingGET
      produces:
        - 'application/json'
      parameters:
        - name: name
          in: query
          description: The name or partial name of the user
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserResponseDto'
        '204':
          description: No content, probably there are no users matching you parameter input
        '400':
          description: Bad request
        '406':
          description: Not acceptable, maybe the name parameter is empty
        '500':
          description: Internal server error
      deprecated: false

    post:
      tags:
        - user-controller
      summary: Creates a new user
      operationId: postUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: UserRequestDto
          description: UserRequestDto
          required: true
          schema:
            $ref: '#/definitions/UserRequestDto'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/UserResponseDto'
        '400':
          description: Bad request
        '409':
          description: Conflict, maybe already exist a user with the username or email you provided
        '500':
          description: Internal server error
      deprecated: false

  /users/{id}:
 
    get:
      tags:
        - user-controller
      summary: Return a user by providing an id
      operationId: getUserByIdUsingGET
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: The unique identifier of the user
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponseDto'
        '400':
          description: Bad request
        '404':
          description: Not Found
        '500':
          description: Internal server error          
      deprecated: false

    put:
      tags:
        - user-controller
      summary: Update a user by providing its new data
      operationId: putUserUsingPUT
      consumes:
        - application/json
      produces:
        - 'application/json'
      parameters:
        - name: id
          in: path
          description: The unique identifier of the user
          required: true
          type: integer
          format: int64
        - in: body
          name: UserRequestDto
          description: The new data to be updated
          required: true
          schema:
            $ref: '#/definitions/UserRequestDto'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserResponseDto'
        '400':
          description: Bad request            
        '404':
          description: Not Found
        '409':
          description: Conflict, maybe already exist a user with the username or email you provided
        '500':
          description: Internal server error
      deprecated: false
 
    delete:
      tags:
        - user-controller
      summary: deleteUser
      operationId: deleteUserUsingDELETE
      produces:
        - ''
      parameters:
        - name: id
          in: path
          description: The unique identifier of the user you want to remove
          required: true
          type: integer
          format: int64
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      deprecated: false

definitions:
 
  UserRequestDto:
    type: object
    properties:
      completeName:
        type: string
        example: Albert Einstein
        description: The complete name of the user
      username:
        type: string
        example: albert19
        description: 'The unique username of the user'
      email:
        type: string
        example: albert@gmail.com
        description: The unique email of the user
      phone:
        type: string
        example: '55999696541'
        description: The phone number of the user
      gender:
        type: string
        example: Male
        description: The gender of the user (Male/Female)
      birthDate:
        type: string
        example: '14/03/1879'
        description: The birth date of the user
      profilePictureURL:
        type: string
        example: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Einstein_1921_by_F_Schmutzer_-_restoration.jpg'
        description: The picture URL of the user
    title: User Request Data Transfer Object

  UserResponseDto:
    type: object
    properties:
      id:
        type: integer
        format: int64
        example: 1
        description: The unique identifier of the user
      completeName:
        type: string
        example: Albert Einstein
        description: The complete name of the user
      username:
        type: string
        example: albert19
        description: 'The unique username of the user'
      email:
        type: string
        example: albert@gmail.com
        description: The unique email of the user
      phone:
        type: string
        example: '55999696541'
        description: The phone number of the user
      gender:
        type: string
        example: Male
        description: 'The gender of the user (Male/Female)'
      birthDate:
        type: string
        example: '14/03/1879'
        description: The birth date of the user
      age:
        type: integer
        format: int64
        example: 90
        description: The age of the user
      profilePictureURL:
        type: string
        example: 'https://upload.wikimedia.org/wikipedia/commons/3/3e/Einstein_1921_by_F_Schmutzer_-_restoration.jpg'
        description: The picture URL of the user
    title: User Response Data Transfer Object
